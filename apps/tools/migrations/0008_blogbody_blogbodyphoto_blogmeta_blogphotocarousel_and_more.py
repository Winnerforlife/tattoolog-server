# Generated by Django 4.2.4 on 2023-11-22 16:39

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('tools', '0007_merge_0006_associationtype_0006_festival'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogBody',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Blog body title')),
                ('body', models.TextField(verbose_name='Blog body')),
            ],
        ),
        migrations.CreateModel(
            name='BlogBodyPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='blog_body/photo', verbose_name='Blog photo')),
                ('alt_name', models.CharField(help_text='ALT name for photo', max_length=255, verbose_name='Photo ALT name')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_body_photo', to='tools.blogbody')),
            ],
        ),
        migrations.CreateModel(
            name='BlogMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_title_tag', models.CharField(help_text='Clickable page title displayed in search engine results as a headline', max_length=255, verbose_name='Meta title tag')),
                ('meta_description', models.CharField(help_text='Description displayed beneath the headline in search engine results', max_length=255, verbose_name='Meta description')),
                ('meta_keywords', models.CharField(help_text='List of keywords that correspond to the content of a website page', max_length=255, verbose_name='Meta keywords')),
                ('opengraph_title', models.CharField(help_text='The title of your object as it should appear within the graph', max_length=255, verbose_name='Opengraph title')),
                ('opengraph_description', models.CharField(help_text='A one to two sentence description of your object', max_length=255, verbose_name='Opengraph description')),
                ('opengraph_image', models.ImageField(help_text='Image to be displayed on the opengraph image', upload_to='opengraph_images/', verbose_name='Opengraph image')),
            ],
        ),
        migrations.CreateModel(
            name='BlogPhotoCarousel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='blog_carousel/photo', verbose_name='Photo carousel')),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Image to be displayed in the blog post body and card photo', upload_to='blog_images/', verbose_name='Image')),
                ('title', models.CharField(max_length=255, verbose_name='Blog post title')),
                ('slug', models.CharField(help_text='Page name in url. Example: https://domain.com/blog/[my_slug]/', max_length=32, verbose_name='Slug')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'German'), ('pl', 'Polish'), ('ua', 'Ukrainian')], default='en', max_length=10)),
                ('country', models.CharField(choices=[('en', 'England'), ('de', 'Germany'), ('pl', 'Poland'), ('ua', 'Ukraine')], default='pl', max_length=10)),
            ],
        ),
        migrations.DeleteModel(
            name='Blog',
        ),
        migrations.AddField(
            model_name='blogphotocarousel',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_photo_carousel', to='tools.blogpost'),
        ),
        migrations.AddField(
            model_name='blogmeta',
            name='post',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='blog_meta', to='tools.blogpost'),
        ),
        migrations.AddField(
            model_name='blogbody',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_body', to='tools.blogpost'),
        ),
    ]
